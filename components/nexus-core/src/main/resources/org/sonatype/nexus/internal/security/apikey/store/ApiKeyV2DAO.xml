<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sonatype.nexus.internal.security.apikey.store.ApiKeyV2DAO">

  <insert id="createSchema">
    CREATE TABLE IF NOT EXISTS api_key_v2 (
      username          VARCHAR(200)   NOT NULL,
      principals        ${BINARY_TYPE} NOT NULL,

      domain            VARCHAR(200)   NOT NULL,
      access_key        VARCHAR(200)   NOT NULL,
      secret            VARCHAR(200)   NOT NULL,

      created           TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,

      <!--
      Optimization: put the primary principal before the domain in the primary key,
      so the PK index can be re-used when querying for a principal over all domains
      -->
      CONSTRAINT pk_api_key_v2_username_domain_principals PRIMARY KEY (username, domain, principals),
      CONSTRAINT uk_api_key_v2_domain_access_key UNIQUE (domain, access_key)
    );

    CREATE INDEX IF NOT EXISTS idx_api_key_v2_domain_created ON api_key_v2 (domain, created);
    CREATE INDEX IF NOT EXISTS idx_api_key_v2_created ON api_key_v2 (created);
    CREATE INDEX IF NOT EXISTS idx_api_key_v2_principals ON api_key_v2 (principals);
  </insert>


  <select id="browsePrincipals" resultType="org.apache.shiro.subject.PrincipalCollection">
    SELECT DISTINCT principals FROM api_key_v2;
  </select>

  <select id="findApiKey" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
     WHERE username   = #{username}
       AND domain = #{domain};
  </select>

  <select id="findApiKeysForUser" resultType="ApiKeyV2Data">
    SELECT * 
      FROM api_key_v2
     WHERE username   = #{username};
  </select>

  <select id="findPrincipals" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
     WHERE domain = #{domain}
       AND access_key = #{accessKey};
  </select>

  <insert id="save" parameterType="ApiKeyV2Data">
    INSERT INTO api_key_v2
           (username, principals, domain, access_key, secret <if test="created != null">, created</if>)
    VALUES (#{username}, #{principals}, #{domain}, #{accessKey}, #{secret} <if test="created != null">, #{created}</if>);
  </insert>

  <delete id="deleteApiKey">
    DELETE
      FROM api_key_v2
     WHERE domain = #{domain}
       AND username = #{username}
       AND access_key = #{accessKey};
  </delete>

  <select id="browse" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
    WHERE domain = #{domain}
    ORDER BY created;
  </select>

  <select id="browseCreatedAfter" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
    WHERE created &gt; #{created}
    ORDER BY created;
  </select>

  <select id="browseCreatedBefore" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
    WHERE created &lt; #{created}
    ORDER BY created;
  </select>

  <select id="count" resultType="java.lang.Integer">
    SELECT count(*)
      FROM api_key_v2
     WHERE domain = #{domain};
  </select>
  
  <update id="updatePrincipal" parameterType="ApiKeyV2Data">
    UPDATE api_key_v2
       SET principals = #{principals}
     WHERE domain = #{domain}
       AND username = #{username}
       AND access_key = #{accessKey};
  </update>

  <select id="browsePaginated" resultType="ApiKeyV2Data">
    SELECT *
      FROM api_key_v2
     WHERE domain = #{domain}
  ORDER BY created
     LIMIT #{limit}
    OFFSET #{skip};
  </select>
</mapper>
